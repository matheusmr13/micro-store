{"version":3,"sources":["cart.svg","lib/schema.js","lib/internal.js","lib/index.js","CartWidget.js","../../design-system/src/lib/index.js","../../design-system/src/lib/schema.js","CartScreen.js","index.js"],"names":["module","exports","name","interface","cart","initialState","products","addProductToCart","type","Api","TYPE","FUNCTION","removeProductFromCart","api","schema","build","setCart","onAddProductToCartCalled","product","getCart","Object","assign","onRemoveProductFromCartCalled","productToRemove","filter","id","CartApi","withCart","onClick","className","role","tabIndex","src","CartSvg","length","components","CartItem","Button","DesignSystem","getComponents","image","small","rating","toFixed","replace","price","qtty","callRemoveProductFromCart","onBack","values","reduce","agg","map","key","ExportMicrofrontend","view","CartWidget","CartScreen"],"mappings":"wDAAAA,EAAOC,QAAU,IAA0B,kC,+ICC5B,GACbC,KAAM,OACNC,UAAW,CACTC,KAAM,CACJC,aAAc,CACZC,SAAU,KAGdC,iBAAkB,CAChBC,KAAMC,IAAIC,KAAKC,UAEjBC,sBAAuB,CACrBJ,KAAMC,IAAIC,KAAKC,YCTfE,EAAM,IAAIJ,IAAIK,GAAQC,QAE5BF,EAAIG,QAAQ,CACVV,SAAU,KAEZO,EAAII,0BAAyB,SAACC,GAC5B,IAAMZ,EAAWO,EAAIM,UAAUb,UAAY,GAC3CO,EAAIG,QACFI,OAAOC,OAAO,CACZf,SAAS,GAAD,mBAAMA,GAAN,CAAgBY,UAK9BL,EAAIS,+BAA8B,SAACC,GACjC,IAAMjB,EAAWO,EAAIM,UAAUb,UAAY,GAC3CO,EAAIG,QACFI,OAAOC,OAAO,CACZf,SAAUA,EAASkB,QAAO,SAACN,GAAD,OAAaA,EAAQO,KAAOF,EAAgBE,YAK7DX,Q,gBCzBA,MAAIL,IAAIK,GAAQC,Q,uBCiBhBW,QAAQC,UAbvB,YAAwC,IAAlBvB,EAAiB,EAAjBA,KAAMwB,EAAW,EAAXA,QAClBtB,EAAaF,EAAbE,SACR,OACE,yBAAKuB,UAAU,aAAaD,QAASA,EAASE,KAAK,SAASC,UAAW,GACrE,yBAAKC,IAAKC,IAASJ,UAAU,qBAC7B,yBAAKA,UAAU,oBAAf,OAEGvB,EAAS4B,OAAS,GAAK,yBAAKL,UAAU,qBAAqBvB,EAAS4B,a,OCX9D,M,MAAIzB,GCFJ,CACbP,KAAM,gBACNC,UAAW,CACTgC,WAAY,MDDepB,QEIzBqB,G,MAAW,SAAC,GAAiB,IAAflB,EAAc,EAAdA,QACVmB,EAAWC,EAAaC,gBAAxBF,OACR,OACE,yBAAKR,UAAU,YACb,yBAAKG,IAAKd,EAAQsB,MAAMC,MAAOZ,UAAU,oBACzC,yBAAKA,UAAU,kBAAkBX,EAAQhB,MACzC,yBAAK2B,UAAU,oBAAf,WAA2CX,EAAQwB,QAAUxB,EAAQwB,OAAOC,QAAQ,GAAGC,QAAQ,IAAK,MACpG,yBAAKf,UAAU,mBAAf,MAAqCX,EAAQ2B,MAAMF,QAAQ,GAAGC,QAAQ,IAAK,MAC3E,yBAAKf,UAAU,sBAAf,SAA2CX,EAAQ4B,MACnD,yBAAKjB,UAAU,qBACb,kBAACQ,EAAD,CAAQR,UAAU,SAASD,QAAS,kBAAMF,EAAQqB,0BAA0B7B,KAA5E,cAmCOQ,QAAQC,UA3BvB,YAAuC,IAAjBvB,EAAgB,EAAhBA,KAAM4C,EAAU,EAAVA,OAClB1C,EAAaF,EAAbE,SACA+B,EAAWC,EAAaC,gBAAxBF,OACR,OACE,yBAAKR,UAAU,cACb,yBAAKA,UAAU,qBACb,kBAACQ,EAAD,CAAQT,QAASoB,GAAjB,UACA,qCAEF,yBAAKnB,UAAU,qBACZT,OAAO6B,OACN3C,EAAS4C,QAAO,SAACC,EAAKjC,GACpB,OAAOE,OAAOC,OAAO8B,EAAd/B,OAAA,IAAAA,CAAA,GACJF,EAAQO,GADJL,OAAA,IAAAA,QAAA,IAAAA,CAAA,GAEAF,GAFA,IAGH4B,OAAQK,EAAIjC,EAAQO,KAAO,IAAIqB,MAAQ,GAAK,QAG/C,KACHM,KAAI,SAAClC,GAAD,OACJ,kBAAC,EAAD,CAAUmC,IAAKnC,EAAQO,GAAIP,QAASA,YCpC9CoC,YAAoB,2BACfxC,GADc,IAEjByC,KAAM,CACJC,aACAC,mB","file":"static/js/main.356a06da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cart.55d46283.svg\";","import { Api } from 'react-microfrontend';\nexport default {\n  name: 'cart',\n  interface: {\n    cart: {\n      initialState: {\n        products: [],\n      },\n    },\n    addProductToCart: {\n      type: Api.TYPE.FUNCTION,\n    },\n    removeProductFromCart: {\n      type: Api.TYPE.FUNCTION,\n    },\n  },\n};\n","import schema from './schema';\nimport {\n  Api\n} from 'react-microfrontend';\nconst api = new Api(schema).build();\n\napi.setCart({\n  products: []\n});\napi.onAddProductToCartCalled((product) => {\n  const products = api.getCart().products || [];\n  api.setCart(\n    Object.assign({\n      products: [...products, product],\n    })\n  );\n});\n\napi.onRemoveProductFromCartCalled((productToRemove) => {\n  const products = api.getCart().products || [];\n  api.setCart(\n    Object.assign({\n      products: products.filter((product) => product.id !== productToRemove.id),\n    })\n  );\n});\n\nexport default schema;","import schema from './schema';\nimport { Api } from 'react-microfrontend';\nexport default new Api(schema).build();\n","import React from 'react';\nimport CartApi from './lib';\nimport CartSvg from './cart.svg';\n\nimport './CartWidget.css';\n\nfunction CartWidget({ cart, onClick }) {\n  const { products } = cart;\n  return (\n    <div className=\"CartWidget\" onClick={onClick} role=\"button\" tabIndex={-1}>\n      <img src={CartSvg} className=\"CartWidget__icon\" />\n      <div className=\"CartWidget__text\">\n        Cart\n        {products.length > 0 && <div className=\"CartWidget__badge\">{products.length}</div>}\n      </div>\n    </div>\n  );\n}\n\nexport default CartApi.withCart(CartWidget);\n","import schema from './schema';\nimport { Api } from 'react-microfrontend';\nexport default new Api(schema).build();\n","export default {\n  name: 'design-system',\n  interface: {\n    components: {},\n  },\n};\n","import React from 'react';\nimport CartApi from './lib';\nimport DesignSystem from 'design-system';\n\nimport './CartScreen.css';\n\nconst CartItem = ({ product }) => {\n  const { Button } = DesignSystem.getComponents();\n  return (\n    <div className=\"CartItem\">\n      <img src={product.image.small} className=\"CartItem__image\" />\n      <div className=\"CartItem__name\">{product.name}</div>\n      <div className=\"CartItem__rating\">Rating: {product.rating && product.rating.toFixed(2).replace('.', ',')}</div>\n      <div className=\"CartItem__price\">R$ {product.price.toFixed(2).replace('.', ',')}</div>\n      <div className=\"CartItem__quantity\">Qtty: {product.qtty}</div>\n      <div className=\"CartItem__actions\">\n        <Button className=\"Button\" onClick={() => CartApi.callRemoveProductFromCart(product)}>\n          Remove\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nfunction CartScreen({ cart, onBack }) {\n  const { products } = cart;\n  const { Button } = DesignSystem.getComponents();\n  return (\n    <div className=\"CartScreen\">\n      <div className=\"CartScreen__title\">\n        <Button onClick={onBack}>Voltar</Button>\n        <h2>Cart</h2>\n      </div>\n      <div className=\"CartScreen__items\">\n        {Object.values(\n          products.reduce((agg, product) => {\n            return Object.assign(agg, {\n              [product.id]: {\n                ...product,\n                qtty: ((agg[product.id] || {}).qtty || 0) + 1,\n              },\n            });\n          }, {})\n        ).map((product) => (\n          <CartItem key={product.id} product={product} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CartApi.withCart(CartScreen);\n","import {\n  ExportMicrofrontend,\n  TYPE\n} from 'react-microfrontend';\nimport schema from './lib/internal';\nimport CartWidget from './CartWidget';\nimport CartScreen from './CartScreen';\n\nExportMicrofrontend({\n  ...schema,\n  view: {\n    CartWidget,\n    CartScreen,\n  },\n});"],"sourceRoot":""}