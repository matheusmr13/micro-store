{"version":3,"sources":["../../design-system/src/lib/index.js","../../design-system/src/lib/schema.js","Store.js","index.js"],"names":["Api","name","interface","components","build","Highlight","children","enabled","backgroundColor","className","style","ConnectedContainer","withMicrofrontend","microfrontends","overrideContent","showMicrofrontends","useState","selected","setSelected","ComponentToRender","view","props","promotion","onPromotionSelected","showcase","onClick","cart","microfrontend","showCart","setShouldShowCart","setShowMicrofrontends","Button","DesignSystem","getComponents","CartWidget","CartScreen","onBack","microfrontendKey","ReactDOM","render","document","getElementById"],"mappings":"+NAEe,M,MAAIA,GCFJ,CACbC,KAAM,gBACNC,UAAW,CACTC,WAAY,MDDeC,QEIzBC,G,MAAY,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,KAAMM,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5C,OAAKD,EAGH,yBAAKE,UAAU,cACb,yBAAKC,MAAO,CAAEF,mBAAmBC,UAAU,wBAC3C,yBAAKA,UAAU,oBAAoBR,GAClCK,GANgBA,IAmDjBK,EAAqBC,aAxCT,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,eAAgBC,EAA0C,EAA1CA,gBAAiBC,EAAyB,EAAzBA,mBAAyB,EAC7CC,mBAAS,YADoC,mBACtEC,EADsE,KAC5DC,EAD4D,KAEvEC,EAAoBN,EAAeI,GAAUG,KAE7CC,EAAQ,CACZC,UAAW,CACTC,oBAAqB,kBAAML,EAAY,aACvCV,gBAAiB,UAEnBgB,SAAU,CACRhB,gBAAiB,SAEnBS,GAEF,OACE,yBAAKR,UAAU,kBACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAAkBgB,QAAS,kBAAMP,EAAY,cAA/D,YAGA,4BAAQT,UAAU,kBAAkBgB,QAAS,kBAAMP,EAAY,eAA/D,cAIF,8BACGJ,GACC,kBAAC,EAAD,aACEP,QAASQ,EACTd,KAAMgB,EACNT,gBAAiBa,EAAMb,iBAHzB,UAIWO,GAET,kBAACI,EAAsBE,SA8CpBT,eApCD,SAAC,GAA6B,IAAZc,EAAW,EAA1BC,cAA0B,EACHX,oBAAS,GADN,mBAClCY,EADkC,KACxBC,EADwB,OAEWb,oBAAS,GAFpB,mBAElCD,EAFkC,KAEde,EAFc,KAGjCC,EAAWC,EAAaC,gBAAxBF,OAHiC,EAINL,EAAKN,KAAhCc,EAJiC,EAIjCA,WAAYC,EAJqB,EAIrBA,WAEpB,OACE,yBAAK1B,UAAU,SACb,yBAAKA,UAAU,oBACb,4BAAQA,UAAU,iBAChB,yBAAKA,UAAU,cACb,wBAAIA,UAAU,gBAAd,sBACsB,IACpB,kBAACsB,EAAD,CAAQN,QAAS,kBAAMK,GAAuBf,KAA9C,wBAEF,yBAAKN,UAAU,eACb,kBAAC,EAAD,CAAWF,QAASQ,EAAoBd,KAAK,OAAOO,gBAAgB,UAClE,kBAAC0B,EAAD,CAAYT,QAAS,kBAAMI,GAAmBD,UAKtD,kBAACjB,EAAD,CACEI,mBAAoBA,EACpBD,gBACEc,GACE,kBAAC,EAAD,CAAWrB,QAASQ,EAAoBd,KAAK,OAAOO,gBAAgB,UAClE,kBAAC2B,EAAD,CAAYC,OAAQ,kBAAMP,GAAkB,aASpB,CAAEQ,iBAAkB,SC1F5DC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.9e93918f.chunk.js","sourcesContent":["import schema from './schema';\nimport { Api } from 'react-microfrontend';\nexport default new Api(schema).build();\n","export default {\n  name: 'design-system',\n  interface: {\n    components: {},\n  },\n};\n","import { withMicrofrontend, TYPE } from 'react-microfrontend';\n\nimport React, { useState } from 'react';\nimport DesignSystem from 'design-system';\nimport './Store.css';\n\nconst Highlight = ({ children, name, enabled, backgroundColor }) => {\n  if (!enabled) return children;\n\n  return (\n    <div className=\"Hightlight\">\n      <div style={{ backgroundColor }} className=\"Hightlight__overlay\" />\n      <div className=\"Hightlight__text\">{name}</div>\n      {children}\n    </div>\n  );\n};\n\nconst Container = ({ microfrontends, overrideContent, showMicrofrontends }) => {\n  const [selected, setSelected] = useState('showcase');\n  const ComponentToRender = microfrontends[selected].view;\n\n  const props = {\n    promotion: {\n      onPromotionSelected: () => setSelected('showcase'),\n      backgroundColor: 'purple',\n    },\n    showcase: {\n      backgroundColor: 'blue',\n    },\n  }[selected];\n\n  return (\n    <div className=\"Store__content\">\n      <nav className=\"Store__nav\">\n        <button className=\"Store__nav-item\" onClick={() => setSelected('showcase')}>\n          Showcase\n        </button>\n        <button className=\"Store__nav-item\" onClick={() => setSelected('promotion')}>\n          Promotion\n        </button>\n      </nav>\n      <main>\n        {overrideContent || (\n          <Highlight\n            enabled={showMicrofrontends}\n            name={selected}\n            backgroundColor={props.backgroundColor}\n            enabled={showMicrofrontends}\n          >\n            <ComponentToRender {...props} />\n          </Highlight>\n        )}\n      </main>\n    </div>\n  );\n};\n\nconst ConnectedContainer = withMicrofrontend(Container);\n\nconst Store = ({ microfrontend: cart }) => {\n  const [showCart, setShouldShowCart] = useState(false);\n  const [showMicrofrontends, setShowMicrofrontends] = useState(false);\n  const { Button } = DesignSystem.getComponents();\n  const { CartWidget, CartScreen } = cart.view;\n\n  return (\n    <div className=\"Store\">\n      <div className=\"Store__container\">\n        <header className=\"Store__header\">\n          <div className=\"Store__top\">\n            <h1 className=\"Store__title\">\n              Microfrontend Store{' '}\n              <Button onClick={() => setShowMicrofrontends(!showMicrofrontends)}>Show microfrontends</Button>\n            </h1>\n            <div className=\"Store__cart\">\n              <Highlight enabled={showMicrofrontends} name=\"Cart\" backgroundColor=\"yellow\">\n                <CartWidget onClick={() => setShouldShowCart(!showCart)} />\n              </Highlight>\n            </div>\n          </div>\n        </header>\n        <ConnectedContainer\n          showMicrofrontends={showMicrofrontends}\n          overrideContent={\n            showCart && (\n              <Highlight enabled={showMicrofrontends} name=\"Cart\" backgroundColor=\"yellow\">\n                <CartScreen onBack={() => setShouldShowCart(false)} />\n              </Highlight>\n            )\n          }\n        />\n      </div>\n    </div>\n  );\n};\nexport default withMicrofrontend(Store, { microfrontendKey: 'cart' });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Store from './Store';\nimport { ImportMicrofrontend } from 'react-microfrontend';\n\nReactDOM.render(\n  <ImportMicrofrontend>\n    <Store />\n  </ImportMicrofrontend>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}